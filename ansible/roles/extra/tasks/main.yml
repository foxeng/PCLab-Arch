---
- name: Setup SDKs
  community.general.pacman:
    name:
    - gdb
    - valgrind
    - clang
    - ltrace
    - strace
    - jdk-openjdk
    - maven
    - nodejs
    - npm
    state: present
  tags:
  - sdk

- name: Setup VirtualBox
  block:
  - name: Gather facts if necessary
    ansible.builtin.setup: {}
    when: ansible_facts is falsy
  - name: Install VirtualBox dependencies
    # NOTE: virtualbox-host-modules-arch is not an optional dependency, so
    # needs to be installed before virtualbox itself (so as to not pull
    # virtualbox-host-dkms which is the default).
    community.general.pacman:
      extra_args: "--asdeps"
      name:
      - virtualbox-host-modules-arch
      - virtualbox-guest-iso
      state: present
  - name: Install VirtualBox
    community.general.pacman:
      name:
      - virtualbox
  - name: Add labuser to vboxusers
    ansible.builtin.user:
      append: yes
      groups:
      - vboxusers
      name: labuser
  # NOTE: Since version 6.1 VirtualBox only supports hardware-assisted
  # virtualization.
  when: "'kvm' in ansible_facts['virtualization_tech_host']"
  tags:
  - virtualbox

- name: Setup Octave
  block:
  - name: Install openblas as blas provider
    # NOTE: Needs to be installed before octave, which would pull blas by
    # default, which conflicts with openblas.
    community.general.pacman:
      extra_args: "--asdeps"
      name:
      - openblas
      state: present
  - name: Install Octave
    community.general.pacman:
      name:
      - octave
      state: present
  tags:
  - octave

- name: Setup data science software
  block:
  - name: Install Jupyter
    community.general.pacman:
      name:
      - jupyterlab
      # - jupyter-notebook
      state: present
    tags:
    - jupyter
  - name: Setup R
    block:
    - name: Install R
      community.general.pacman:
        name:
        - r
        state: present
    - name: Install optional R dependencies
      community.general.pacman:
        extra_args: "--asdeps"
        name:
        - gcc-fortran
        - openblas
        - tk
        state: present
    tags:
    - r
  - name: Install pip packages
    vars:
      tmpdir: /home/labuser/tmp
    block:
    - name: Create temp directory for pip to use
      ansible.builtin.file:
        group: labuser
        owner: labuser
        mode: 0755
        path: "{{ tmpdir }}"
        state: directory
    - name: Install / update packages with pip
      become: yes
      become_user: labuser
      ansible.builtin.pip:
        extra_args: "--user"
        name:
        - numpy
        - scipy
        - matplotlib
        - pandas
        - scikit-learn
        - torch
        - seaborn
        - tqdm
        - networkx
        - node2vec
        state: latest
      environment:
        TMPDIR: "{{ tmpdir }}"
    - name: Delete temp directory for pip
      ansible.builtin.file:
        path: "{{ tmpdir }}"
        state: absent
    tags:
    - python
    - pip
  - name: Install conda packages
    vars:
      remote_pkg_dir: /root/pkg/
    block:
    - name: Copy pre-built AUR packages
      ansible.builtin.copy:
        dest: "{{ remote_pkg_dir }}"
        src: pkg/
    - name: Install miniconda
      community.general.pacman:
        name:
        - "{{ remote_pkg_dir }}/miniconda3-4.10.3-1-x86_64.pkg.tar.zst"
        state: present
    - name: Enable miniconda for all users
      ansible.builtin.file:
        path: /etc/profile.d/conda.sh
        src: /opt/miniconda3/etc/profile.d/conda.sh
        state: link
    - name: Install packages with conda
      # TODO OPT: Install openfst by other means to avoid conda
      ansible.builtin.shell: |
        source /opt/miniconda3/etc/profile.d/conda.sh &&
          conda install -y -c conda-forge openfst=1.6.1
    - name: Remove pre-built AUR package files
      ansible.builtin.file:
        path: "{{ remote_pkg_dir }}"
        state: absent
    tags:
    - conda
  - name: Setup weka
    vars:
      pkg_url: https://downloads.sourceforge.net/sourceforge/weka/weka-3-8-6-azul-zulu-linux.zip
      local_pkg: "{{ role_path }}/files/weka-3-8-6-azul-zulu-linux.zip"
      remote_unarchive_dir: /home/labuser/opt/weka-3-8-6
      remote_install_dir: /home/labuser/opt/weka
    block:
    - name: Download local weka
      local_action:
        module: ansible.builtin.get_url
        dest: "{{ local_pkg }}"
        url: "{{ pkg_url }}"
    - name: Install latest weka
      ansible.builtin.unarchive:
        src: "{{ local_pkg }}"
        dest: "{{ remote_unarchive_dir | dirname }}"
        owner: labuser
        group: labuser
    - name: Rename weka install directory
      ansible.builtin.command: "mv {{ remote_unarchive_dir }} {{ remote_install_dir }}"
    - name: Add script for labuser to start weka
      ansible.builtin.copy:
        content: |
          #!/bin/sh
          # NOTE: This seems redundant, but it is necessary, because weka.sh below doesn't work if
          # invoked through a symlink.
          {{ remote_install_dir }}/weka.sh
        dest: /home/labuser/.local/bin/start_weka
        owner: labuser
        group: labuser
        mode: 0755
    - name: Create local desktop files directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: labuser
        group: labuser
      with_items:
      - /home/labuser/.local/share/applications
      - /home/labuser/.local/share/icons
    - name: Install weka.desktop file
      ansible.builtin.copy:
        src: weka.desktop
        dest: /home/labuser/.local/share/applications/weka.desktop
        owner: labuser
        group: labuser
        mode: 0644
    - name: Install weka icon
      ansible.builtin.copy:
        src: weka.png
        dest: /home/labuser/.local/share/icons/weka.png
        owner: labuser
        group: labuser
        mode: 0644
    tags:
    - weka
  tags:
  - data-science

- name: Setup networking software
  block:
  - name: Install packages
    community.general.pacman:
      name:
      - wireshark-qt
      - traceroute
      - tcpdump
      state: present
  - name: Add labuser to wireshark
    ansible.builtin.user:
      append: yes
      groups:
      - wireshark
      name: labuser
  - name: Allow labuser to run tcpdump as root
    # TODO OPT: Add alias tcpdump=sudo tcpdump?
    ansible.builtin.lineinfile:
      line: "labuser ALL=(ALL) NOPASSWD: /usr/bin/tcpdump"
      path: /etc/sudoers
      state: present
  tags:
  - networking

- name: Setup MariaDB
  block:
  - name: Install MariaDB
    block:
    - name: Install packages
      community.general.pacman:
        name:
        - mariadb
        state: present
    - name: Initialize mariadb
      ansible.builtin.command: mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
    - name: Start mariadb service
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: no
    - name: Secure mariadb
      ansible.builtin.command: mysql_secure_installation
      args:
        stdin: "\nn\ny\ny\ny\ny\n"
    - name: Create labuser database and user
      ansible.builtin.command: mysql -u root
      args:
        stdin: |
          CREATE DATABASE IF NOT EXISTS labuserdb;
          CREATE USER IF NOT EXISTS labuser@localhost IDENTIFIED BY 'labuser';
          GRANT ALL PRIVILEGES ON labuserdb.* TO 'labuser'@'localhost';
          FLUSH PRIVILEGES;
    - name: Set mariadb to only listen on loopback
      ansible.builtin.lineinfile:
        path: /etc/my.cnf.d/server.cnf
        insertafter: '^\[mysqld\]'
        line: "bind-address=127.0.0.1"
        state: present
    - name: Allow labuser to start mariadb service
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: 'labuser ALL=(ALL) NOPASSWD: /usr/bin/systemctl start mysqld'
        state: present
    - name: Add script for labuser to start mariadb service
      ansible.builtin.copy:
        content: |
          #!/bin/sh
          sudo systemctl start mysqld
        dest: /home/labuser/.local/bin/start_mysql
        owner: labuser
        group: labuser
        mode: 0755
    - name: Download mariadb java connector
      ansible.builtin.get_url:
        url: "https://downloads.mariadb.com/Connectors/java/connector-java-3.0.3/mariadb-java-client-3.0.3.jar"
        dest: /home/labuser/Downloads
        owner: labuser
        group: labuser
        mode: 0644
  - name: Install phpMyAdmin
    block:
    - name: Install phpmyadmin package
      community.general.pacman:
        name: phpmyadmin
        state: present
    - name: Enable php extensions for mysql
      ansible.builtin.lineinfile:
        path: /etc/php/php.ini
        regexp: '^;extension={{ item }}'
        line: "extension={{ item }}"
      with_items:
      - pdo_mysql
      - mysqli
      - iconv
    - name: Add script for labuser to run phpmyadmin
      ansible.builtin.copy:
        content: |
          #!/bin/sh
          cd /usr/share/webapps/phpMyAdmin
          php -S localhost:8000
        dest: /home/labuser/.local/bin/start_phpmyadmin
        owner: labuser
        group: labuser
        mode: 0755
  tags:
  - mariadb

- name: Setup netprog software
  block:
  - name: Install java build tools
    community.general.pacman:
      name:
      - maven
      - gradle
      state: present
  - name: Install tomcat 9
    vars:
      pkg_url: https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.59/bin/apache-tomcat-9.0.59.tar.gz
      remote_unarchive_dir: "/home/labuser/opt/{{ ((pkg_url | basename | splitext)[0] | splitext)[0] }}"
      remote_install_dir: /home/labuser/opt/tomcat9
    block:
    - name: Remove possible past tomcat 9 installation
      ansible.builtin.file:
        path: "{{ remote_install_dir }}"
        state: absent
    - name: Install latest tomcat 9
      ansible.builtin.unarchive:
        src: "{{ pkg_url }}"
        remote_src: yes
        dest: "{{ remote_unarchive_dir | dirname }}"
        owner: labuser
        group: labuser
    - name: Rename tomcat 9 install directory
      ansible.builtin.command: "mv {{ remote_unarchive_dir }} {{ remote_install_dir }}"
    - name: Add link to tomcat startup script in path
      ansible.builtin.file:
        src: "{{ remote_install_dir }}/bin/startup.sh"
        path: /home/labuser/.local/bin/start_tomcat9
        state: link
        owner: labuser
        group: labuser
  - name: Install tomcat 8
    vars:
      pkg_url: https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.76/bin/apache-tomcat-8.5.76.tar.gz
      remote_unarchive_dir: "/home/labuser/opt/{{ ((pkg_url | basename | splitext)[0] | splitext)[0] }}"
      remote_install_dir: /home/labuser/opt/tomcat8
    block:
    - name: Remove possible past tomcat 8 installation
      ansible.builtin.file:
        path: "{{ remote_install_dir }}"
        state: absent
    - name: Install latest tomcat 8
      ansible.builtin.unarchive:
        src: "{{ pkg_url }}"
        remote_src: yes
        dest: "{{ remote_unarchive_dir | dirname }}"
        owner: labuser
        group: labuser
    - name: Rename tomcat 8 install directory
      ansible.builtin.command: "mv {{ remote_unarchive_dir }} {{ remote_install_dir }}"
    - name: Add link to tomcat 8 startup script in path
      ansible.builtin.file:
        src: "{{ remote_install_dir }}/bin/startup.sh"
        path: /home/labuser/opt/bin/start_tomcat8
        state: link
        owner: labuser
        group: labuser
  tags:
  - netprog
